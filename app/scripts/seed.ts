
import { PrismaClient } from '@prisma/client'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Iniciando seed do banco de dados...')

  // Limpar dados existentes (cuidado em produ√ß√£o!)
  try {
    await prisma.legislativeProcess.deleteMany()
    await prisma.documentVote.deleteMany()
    await prisma.vote.deleteMany()
    await prisma.speechRequest.deleteMany()
    await prisma.sessionPhase.deleteMany()
    await prisma.document.deleteMany()
    await prisma.attendance.deleteMany()
    await prisma.sessionMatter.deleteMany()
    await prisma.matter.deleteMany()
    await prisma.votingSession.deleteMany()
    await prisma.user.deleteMany()
    console.log('üóëÔ∏è Dados existentes removidos')
  } catch (error) {
    console.log('‚ÑπÔ∏è Banco limpo (primeira execu√ß√£o)')
  }

  // Hash para as senhas
  const hashPassword = async (password: string) => {
    return await bcrypt.hash(password, 12)
  }

  // 1. Criar Administrador
  const admin = await prisma.user.create({
    data: {
      email: 'admin@camara.gov.br',
      password: await hashPassword('admin123'),
      fullName: 'Administrador do Sistema',
      role: 'ADMIN'
    }
  })
  console.log('üë®‚Äçüíº Administrador criado')

  // 2. Criar Presidente da C√¢mara
  const president = await prisma.user.create({
    data: {
      email: 'presidente@camara.gov.br',
      password: await hashPassword('presidente123'),
      fullName: 'Carlos Eduardo da Silva',
      role: 'PRESIDENT'
    }
  })
  console.log('üèõÔ∏è Presidente criado')

  // 3. Criar 13 Vereadores fict√≠cios
  const vereadores = [
    {
      email: 'maria.santos@camara.gov.br',
      fullName: 'Maria dos Santos Oliveira',
      password: 'vereador123'
    },
    {
      email: 'joao.silva@camara.gov.br',
      fullName: 'Jo√£o Carlos Silva',
      password: 'vereador123'
    },
    {
      email: 'ana.costa@camara.gov.br',
      fullName: 'Ana Paula Costa',
      password: 'vereador123'
    },
    {
      email: 'pedro.almeida@camara.gov.br',
      fullName: 'Pedro Almeida Ferreira',
      password: 'vereador123'
    },
    {
      email: 'luciana.rodrigues@camara.gov.br',
      fullName: 'Luciana Rodrigues Mendes',
      password: 'vereador123'
    },
    {
      email: 'marcos.pereira@camara.gov.br',
      fullName: 'Marcos Pereira dos Santos',
      password: 'vereador123'
    },
    {
      email: 'fernanda.lima@camara.gov.br',
      fullName: 'Fernanda Lima Barbosa',
      password: 'vereador123'
    },
    {
      email: 'roberto.souza@camara.gov.br',
      fullName: 'Roberto Souza Martins',
      password: 'vereador123'
    },
    {
      email: 'patricia.moura@camara.gov.br',
      fullName: 'Patr√≠cia Moura Gon√ßalves',
      password: 'vereador123'
    },
    {
      email: 'ricardo.nobrega@camara.gov.br',
      fullName: 'Ricardo N√≥brega Ara√∫jo',
      password: 'vereador123'
    },
    {
      email: 'claudia.torres@camara.gov.br',
      fullName: 'Cl√°udia Torres Campos',
      password: 'vereador123'
    },
    {
      email: 'antonio.ramos@camara.gov.br',
      fullName: 'Ant√¥nio Ramos da Costa',
      password: 'vereador123'
    },
    {
      email: 'simone.cardoso@camara.gov.br',
      fullName: 'Simone Cardoso Ribeiro',
      password: 'vereador123'
    }
  ]

  // Criar todos os vereadores
  const createdCouncilors = []
  for (const vereador of vereadores) {
    const createdCouncilor = await prisma.user.create({
      data: {
        email: vereador.email,
        password: await hashPassword(vereador.password),
        fullName: vereador.fullName,
        role: 'COUNCILOR'
      }
    })
    createdCouncilors.push(createdCouncilor)
  }
  console.log(`üë• ${createdCouncilors.length} Vereadores criados`)

  // 4. Criar conta de teste especial (conforme diretrizes)
  const testUser = await prisma.user.create({
    data: {
      email: 'john@doe.com',
      password: await hashPassword('johndoe123'),
      fullName: 'John Doe - Teste Admin',
      role: 'ADMIN'
    }
  })
  console.log('üîß Conta de teste criada')

  // 5. Criar uma sess√£o de exemplo (agendada para demonstra√ß√£o)
  const exampleSession = await prisma.votingSession.create({
    data: {
      title: 'Sess√£o Ordin√°ria de Demonstra√ß√£o',
      description: 'Primeira sess√£o do sistema de vota√ß√£o eletr√¥nica',
      status: 'SCHEDULED',
      scheduledAt: new Date(Date.now() + 24 * 60 * 60 * 1000), // Amanh√£
      quorum: 7, // Maioria simples para 13 vereadores
      sessionNumber: '001/2024',
      date: new Date(),
      createdBy: president.id
    }
  })
  console.log('üìÖ Sess√£o de exemplo criada')

  // 6. Criar pautas de exemplo
  const exampleMatters = [
    {
      title: 'Aprova√ß√£o do Or√ßamento Municipal 2024',
      description: 'Discuss√£o e vota√ß√£o da proposta or√ßament√°ria para o pr√≥ximo exerc√≠cio fiscal',
    },
    {
      title: 'Lei do Plano Diretor - Altera√ß√µes',
      description: 'Proposta de altera√ß√£o de alguns artigos do Plano Diretor Municipal',
    },
    {
      title: 'Cria√ß√£o do Programa Jovem Empreendedor',
      description: 'Projeto de lei que institui programa de incentivo ao empreendedorismo jovem',
    }
  ]

  const createdMatters = []
  for (const [index, matter] of exampleMatters.entries()) {
    const createdMatter = await prisma.matter.create({
      data: {
        title: matter.title,
        description: matter.description,
        status: 'PENDING',
        orderIndex: index + 1,
        createdBy: president.id
      }
    })
    createdMatters.push(createdMatter)

    // Vincular pauta √† sess√£o
    await prisma.sessionMatter.create({
      data: {
        sessionId: exampleSession.id,
        matterId: createdMatter.id,
        orderIndex: index + 1
      }
    })
  }
  console.log(`üìã ${createdMatters.length} Pautas de exemplo criadas`)

  // 7. Criar documentos de exemplo para diferentes fases da sess√£o
  const exampleDocuments = [
    {
      title: 'Ata da Sess√£o Anterior - 15/09/2024',
      description: 'Aprova√ß√£o da ata da sess√£o ordin√°ria do dia 15 de setembro de 2024',
      type: 'ATA_ANTERIOR',
      content: `ATA DA SESS√ÉO ORDIN√ÅRIA N¬∞ 012/2024

Aos quinze dias do m√™s de setembro do ano de dois mil e vinte e quatro, √†s nove horas, reuniram-se os Vereadores da C√¢mara Municipal em sess√£o ordin√°ria, sob a presid√™ncia do Excelent√≠ssimo Senhor Presidente.

PRESENTES: Os Vereadores Maria dos Santos, Jo√£o Carlos Silva, Pedro Oliveira, Ana Paula Costa, Roberto Ferreira, Carlos Eduardo Santos, Luciana Pereira, Jos√© Antonio Lima, Teresa Cristina Souza, Fernando Augusto Rocha, M√°rcia Regina Alves, Ant√¥nio Carlos Neves e Paulo Henrique Torres.

AUSENTES: Nenhum vereador ausente foi registrado.

PAUTA:
1. Aprova√ß√£o da Ata da Sess√£o Anterior
2. Discuss√£o sobre o Projeto de Lei n¬∞ 145/2024
3. Requerimento para pavimenta√ß√£o das ruas do Bairro Central
4. Outros assuntos de interesse p√∫blico

A sess√£o foi presidida pelo Excelent√≠ssimo Presidente da C√¢mara, que ap√≥s verificar a presen√ßa do qu√≥rum regimental, declarou aberta a sess√£o.

No Grande Expediente foram apresentados tr√™s requerimentos de autoria dos Vereadores, tratando de quest√µes relacionadas √† melhoria da infraestrutura urbana e servi√ßos p√∫blicos municipais.

Durante a Ordem do Dia foram votadas e aprovadas por unanimidade as seguintes mat√©rias:
- Projeto de Lei n¬∞ 145/2024 que disp√µe sobre hor√°rios de funcionamento do com√©rcio
- Mo√ß√£o de congratula√ß√µes pelos 50 anos da Escola Municipal Jo√£o da Silva

Nada mais havendo a tratar, o Excelent√≠ssimo Presidente declarou encerrada a sess√£o √†s onze horas e quinze minutos.

Para constar, eu, Secret√°rio da C√¢mara, lavrei a presente ata que vai assinada por mim e pelo Excelent√≠ssimo Presidente.`,
      author: 'Secret√°rio da C√¢mara'
    },
    {
      title: 'Dispensa da Leitura da Ata',
      description: 'Solicita√ß√£o de dispensa da leitura integral da ata anterior',
      type: 'DISPENSA_ATA',
      content: `REQUERIMENTO DE DISPENSA DE LEITURA

Excelent√≠ssimo Senhor Presidente,
Nobres Vereadores,

Tendo em vista que a Ata da Sess√£o Anterior foi previamente distribu√≠da a todos os Senhores Vereadores com anteced√™ncia m√≠nima de 24 horas, conforme determina o Regimento Interno desta Casa Legislativa, e considerando que todos os membros tiveram oportunidade de examinar detidamente o seu conte√∫do,

REQUEIRO a dispensa da leitura integral da referida ata, passando-se diretamente √† sua discuss√£o e vota√ß√£o, caso haja alguma observa√ß√£o ou retifica√ß√£o a ser apresentada.

Esta medida objetiva agilizar os trabalhos da presente sess√£o, permitindo maior tempo para a discuss√£o das mat√©rias constantes da Ordem do Dia.

Respeitosamente,
Mesa Diretora`,
      author: 'Mesa Diretora'
    },
    {
      title: 'Requerimento 001/2024 - Informa√ß√µes sobre Obras P√∫blicas',
      description: 'Requerimento solicitando informa√ß√µes sobre o andamento das obras de pavimenta√ß√£o',
      type: 'REQUERIMENTO',
      content: `REQUERIMENTO N¬∞ 001/2024

Excelent√≠ssimo Senhor Presidente,
Nobres Pares,

O Vereador que este subscreve, no uso de suas atribui√ß√µes regimentais, vem perante esta Casa Legislativa apresentar o seguinte REQUERIMENTO:

CONSIDERANDO que o sistema vi√°rio de nossa cidade apresenta diversas defici√™ncias que comprometem a mobilidade urbana e a qualidade de vida dos mun√≠cipes;

CONSIDERANDO que v√°rias ruas e avenidas encontram-se em estado prec√°rio de conserva√ß√£o, oferecendo riscos √† seguran√ßa dos usu√°rios;

CONSIDERANDO a necessidade de implementar melhorias na sinaliza√ß√£o de tr√¢nsito e na ilumina√ß√£o p√∫blica;

REQUER que seja oficiado ao Excelent√≠ssimo Senhor Prefeito Municipal solicitando:

1) Elabora√ß√£o de um cronograma emergencial de recupera√ß√£o das vias p√∫blicas em pior estado de conserva√ß√£o;

2) Implementa√ß√£o de programa permanente de manuten√ß√£o preventiva do sistema vi√°rio municipal;

3) Melhoria da sinaliza√ß√£o de tr√¢nsito, especialmente nas proximidades de escolas e centros de sa√∫de;

4) Amplia√ß√£o e moderniza√ß√£o do sistema de ilumina√ß√£o p√∫blica, priorizando √°reas de maior vulnerabilidade social;

5) Cria√ß√£o de relat√≥rio mensal sobre as a√ß√µes implementadas para conhecimento desta Casa Legislativa.

Respeitosamente,
Vereador Jos√© Silva`,
      author: 'Vereador Jos√© Silva'
    },
    {
      title: 'Projeto de Lei 005/2024 - Hor√°rios de Funcionamento',
      description: 'Projeto de lei que altera hor√°rios de funcionamento do com√©rcio local',
      type: 'PROJETO',
      content: `PROJETO DE LEI N¬∞ 005/2024

Altera os hor√°rios de funcionamento do com√©rcio local e d√° outras provid√™ncias.

Art. 1¬∞ Fica alterado o hor√°rio de funcionamento dos estabelecimentos comerciais no munic√≠pio, que poder√£o funcionar:

I - De segunda a sexta-feira: das 8h √†s 22h;
II - Aos s√°bados: das 8h √†s 18h;
III - Aos domingos e feriados: das 14h √†s 20h (facultativo).

Art. 2¬∞ Ficam excetuados do disposto no artigo anterior:

I - Farm√°cias e drogarias;
II - Postos de combust√≠vel;
III - Restaurantes, lanchonetes e similares;
IV - Estabelecimentos de turismo e hotelaria;
V - Supermercados e hipermercados.

Art. 3¬∞ O descumprimento desta Lei sujeitar√° o infrator √†s penalidades previstas no C√≥digo de Posturas Municipal.

Art. 4¬∞ Esta Lei entra em vigor na data de sua publica√ß√£o.

JUSTIFICA√á√ÉO

O presente projeto visa adequar os hor√°rios comerciais √†s necessidades da popula√ß√£o, permitindo maior flexibilidade aos consumidores e oportunidades de crescimento aos empres√°rios locais.`,
      author: 'Vereadora Maria dos Santos'
    }
  ]

  const createdDocuments = []
  for (const [index, doc] of exampleDocuments.entries()) {
    const createdDoc = await prisma.document.create({
      data: {
        title: doc.title,
        description: doc.description,
        content: doc.content,
        author: doc.author,
        type: doc.type as any,
        orderIndex: index + 1,
        sessionId: exampleSession.id,
        createdBy: admin.id
      }
    })
    createdDocuments.push(createdDoc)
  }
  console.log(`üìÑ ${createdDocuments.length} Documentos de exemplo criados`)

  // 8. Criar solicita√ß√µes de fala de exemplo
  const speechRequests = [
    {
      type: 'CONSIDERACOES_FINAIS',
      subject: 'Quest√µes sobre transporte p√∫blico municipal',
      userId: createdCouncilors[0].id // Maria dos Santos
    },
    {
      type: 'CONSIDERACOES_FINAIS', 
      subject: 'Proposta para melhoria da ilumina√ß√£o p√∫blica',
      userId: createdCouncilors[1].id // Jo√£o Carlos
    },
    {
      type: 'TRIBUNA_LIVE',
      subject: 'Reivindica√ß√µes dos moradores do Bairro Centro',
      citizenName: 'Jos√© da Silva Pereira',
      citizenCpf: '123.456.789-00'
    },
    {
      type: 'TRIBUNA_LIVE',
      subject: 'Apresenta√ß√£o do projeto comunit√°rio de reciclagem',
      citizenName: 'Ana Maria Ferreira',
      citizenCpf: '987.654.321-00'
    }
  ]

  const createdSpeechRequests = []
  for (const [index, speech] of speechRequests.entries()) {
    const createdSpeech = await prisma.speechRequest.create({
      data: {
        sessionId: exampleSession.id,
        type: speech.type as any,
        subject: speech.subject,
        userId: speech.userId || null,
        citizenName: speech.citizenName || null,
        citizenCpf: speech.citizenCpf || null,
        orderIndex: index + 1,
        isApproved: false
      }
    })
    createdSpeechRequests.push(createdSpeech)
  }
  console.log(`üé§ ${createdSpeechRequests.length} Solicita√ß√µes de fala criadas`)

  // 9. Criar processos legislativos de exemplo
  const legislativeProcesses = [
    {
      userId: createdCouncilors[0].id, // Maria dos Santos
      speechRequestId: createdSpeechRequests[0].id, // Vincula √† primeira solicita√ß√£o
      number: '001/2024',
      title: 'Projeto de Lei - Sistema de Transporte P√∫blico Municipal',
      description: 'Disp√µe sobre a cria√ß√£o de novas linhas de √¥nibus e melhoria do transporte coletivo municipal, com foco na sustentabilidade e acessibilidade.',
      type: 'PROJETO_LEI',
      status: 'EM_TRAMITACAO'
    },
    {
      userId: createdCouncilors[0].id, // Maria dos Santos
      number: '002/2024',
      title: 'Requerimento - Informa√ß√µes sobre Or√ßamento de Transporte',
      description: 'Solicita informa√ß√µes detalhadas sobre o or√ßamento destinado ao transporte p√∫blico municipal e os investimentos previstos para 2024.',
      type: 'REQUERIMENTO',
      status: 'EM_TRAMITACAO'
    },
    {
      userId: createdCouncilors[1].id, // Jo√£o Carlos
      speechRequestId: createdSpeechRequests[1].id, // Vincula √† segunda solicita√ß√£o
      number: '003/2024',
      title: 'Indica√ß√£o - Programa de Ilumina√ß√£o LED',
      description: 'Indica ao Poder Executivo a implementa√ß√£o de programa de substitui√ß√£o da ilumina√ß√£o p√∫blica por tecnologia LED, visando economia energ√©tica.',
      type: 'INDICACAO',
      status: 'EM_TRAMITACAO'
    },
    {
      userId: createdCouncilors[1].id, // Jo√£o Carlos
      number: '004/2024',
      title: 'Mo√ß√£o de Apoio - Energia Solar em Pr√©dios P√∫blicos',
      description: 'Mo√ß√£o de apoio √† implementa√ß√£o de sistemas de energia solar fotovoltaica em pr√©dios p√∫blicos municipais.',
      type: 'MOCAO',
      status: 'APROVADO'
    },
    {
      userId: createdCouncilors[2].id, // Pedro Oliveira
      number: '005/2024',
      title: 'Projeto de Lei - Programa Jovem Empreendedor',
      description: 'Institui o Programa Municipal Jovem Empreendedor, oferecendo capacita√ß√£o e microcr√©dito para jovens de 18 a 29 anos.',
      type: 'PROJETO_LEI',
      status: 'EM_TRAMITACAO'
    },
    {
      userId: createdCouncilors[3].id, // Ana Clara
      number: '006/2024',
      title: 'Requerimento - Centro de Atendimento √† Mulher',
      description: 'Requer informa√ß√µes sobre a cria√ß√£o de Centro Especializado de Atendimento √† Mulher em situa√ß√£o de viol√™ncia dom√©stica.',
      type: 'REQUERIMENTO',
      status: 'EM_TRAMITACAO'
    }
  ]

  const createdProcesses = []
  for (const process of legislativeProcesses) {
    const createdProcess = await prisma.legislativeProcess.create({
      data: process
    })
    createdProcesses.push(createdProcess)
  }
  console.log(`üìã ${createdProcesses.length} Processos legislativos criados`)

  // 10. Criar hist√≥rico de fases da sess√£o
  await prisma.sessionPhase.create({
    data: {
      sessionId: exampleSession.id,
      phase: 'SCHEDULED',
      startedAt: exampleSession.createdAt
    }
  })
  console.log('üìù Hist√≥rico de fases iniciado')

  console.log('‚úÖ Seed conclu√≠do com sucesso!')
  console.log('\nüìä Resumo dos dados criados:')
  console.log(`- 1 Administrador: admin@camara.gov.br (senha: admin123)`)
  console.log(`- 1 Presidente: presidente@camara.gov.br (senha: presidente123)`)
  console.log(`- 13 Vereadores: [email]@camara.gov.br (senha: vereador123)`)
  console.log(`- 1 Conta Teste: john@doe.com (senha: johndoe123)`)
  console.log(`- 1 Sess√£o de demonstra√ß√£o com todas as fases`)
  console.log(`- 3 Pautas para vota√ß√£o`)
  console.log(`- 4 Documentos para expedientes (ata, requerimentos, projetos)`)
  console.log(`- 4 Solicita√ß√µes de fala (vereadores e cidad√£os)`)
  console.log(`- 6 Processos legislativos dos vereadores`)
  console.log(`- Hist√≥rico de fases da sess√£o`)
  console.log('\nüèõÔ∏è Funcionalidades dispon√≠veis:')
  console.log(`- Pequeno Expediente (ata anterior, dispensas)`)
  console.log(`- Grande Expediente (requerimentos, projetos)`)
  console.log(`- Ordem do Dia (vota√ß√£o das pautas)`)
  console.log(`- Considera√ß√µes Finais (vereadores)`)
  console.log(`- Tribuna Live (cidad√£os)`)
  console.log('\nüîó Acesse: http://localhost:3000')
}

main()
  .catch((e) => {
    console.error('‚ùå Erro durante o seed:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
